# PROGNAME=`basename "$0"`

# # Check for xwininfo and xprop
# for cmd in xwininfo xprop; do
#     if ! which $cmd > /dev/null 2>&1; then
#         echo "$PROGNAME: $cmd: command not found" >&2
#         exit 1
#     fi
# done

# match_int='[0-9][0-9]*'
# match_string='".*"'
# match_qstring='"[^"\\]*(\\.[^"\\]*)*"' # NOTE: Adds 1 backreference

# {
#     # Run xwininfo, get window id
#     window_id=`xwininfo -int | sed -nre "s/^xwininfo: Window id: ($match_int) .*$/\1/p"`
#     echo "id=$window_id"

#     # Run xprop, transform its output into i3 criteria. Handle fallback to
#     # WM_NAME when _NET_WM_NAME isn't set
#     xprop -id $window_id |
#         sed -nr \
#             -e "s/^WM_CLASS\(STRING\) = ($match_qstring), ($match_qstring)$/instance=\1\nclass=\3/p" \
#             -e "s/^WM_WINDOW_ROLE\(STRING\) = ($match_qstring)$/window_role=\1/p" \
#             -e "/^WM_NAME\(STRING\) = ($match_string)$/{s//title=\1/; h}" \
#             -e "/^_NET_WM_NAME\(UTF8_STRING\) = ($match_qstring)$/{s//title=\1/; h}" \
#             -e '${g; p}'
# } | sort | tr "\n" " " | sed -r 's/^(.*) $/[\1]\n/'

#!/bin/bash

ALL_NODES='recurse(.nodes[]?, .floating_nodes[]?) | select(.pid and .visible)'
WINDOW_NAME='(.app_id // .window_properties.class)'
ID_PREFIX='"\(.id):"'
WINDOW_PROTOCOL='(if .shell == "xwayland" then "X11" else "wayland" end)'
WINDOW_GEOMETRY='(.rect | "\(.x),\(.y) \(.width)x\(.height) ")'
WINDOW_PID='(.pid | tostring)'

# Output format, e.g. "1234 - 12:firefox (wayland)" or "5678 - 17:discord (X11)"
FORMAT="$WINDOW_PID + \" - \" + $ID_PREFIX + $WINDOW_NAME + \" (\" + $WINDOW_PROTOCOL + \")\""
FILT="$ALL_NODES | $WINDOW_GEOMETRY + $FORMAT"

function getprop() {
	typeset -A views
	local selected

	while read POS GEOM INFO; do
		views["$POS $GEOM"]="$INFO"
	done

	selected="$(printf "%s\n" "${!views[@]}" | slurp)"
	if [[ -n "$selected" ]]; then
		printf '%s\n' "${views[${selected}]}"
	fi
}

if [[ "$1" == "wait" ]]; then
	swaymsg -t subscribe '["workspace"]' | jq -r ".current | $FILT" | getprop
else
	swaymsg -t get_tree | jq -r "$FILT" | getprop
fi

